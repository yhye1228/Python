###피보나치 수열##########################################################################################################
#n = 6
# def fibo(n):
#     if n <= 0:
#         return 0
#     elif n == 1:
#         return 1
#     elif n == 2:
#         return 1
#     else:
#         return fibo(n-1) + fibo(n-2)
# # print(fibo(10))
#
# for i in range(1, 100):
#     if(fibo(i) == 55):
#         result = i
#         print(result)
#         break

###268p#################################################################################################################
# counter = 0
# def f(n:int) -> int:
#     print('fibonacci {} 를 구합니다.'.format(n))
#     global counter
#     counter += 1
#
#     if n ==1 or n == 2:
#         return 1
#     else:
#         result = f(n-2) + f(n-1)
#         return result
# print(f(10))
# print(f'counter : {counter}')
###305p 리스트 평탄화#####################################################################################################
#list평탄화 : list안에 list가 들어 있음(행렬)을 한줄로 바꿔주기 => 연산을 위해
#도전문제4
# example = [[1, 2, 3], [4, [5, 6]], 7, [8, 9]]
# def flatten(data):
#     output = []
#     for item in data:
#         if type(item) == list:
#             output += flatten(item)
#             #print("list : ", output)
#         else:
#             output.append(item)
#             #print("data : ", output)
#     return output
# print("원본 : ", example)
# print("평단화 : ", flatten(example))
#=>메모리를 많이 차지 하는 단점이 있음(한번 만들어주면 유용하게 사용가능)
#
###튜플() : 리스트와 유사하지만 요소 변경 불가, 개수가 2개 이상이거나#############################################################
#tuple = (20, 30, 40)
#tuple2 = 20, 30, 40
#tuple3 = 50(x)
#tuple4 = (50, )
# values = (10, 20, 30, 40)
# print(type(values))
# # values[0] = 1000 => 변경불가
# print(values[0:2])
#
# a, b, c = 10, 20, 30
# a, b = b, a # 변수 변경
# print("a : ", a)
# print("b : ", b)
########################################################################################################################
# def test():
#     return (10, 20)
#
# a, b = test()
# print("a : ", a)
# print("b : ", b)
###람다함수(10/14)##############################################################################################################

###순수함수##############################################################################################################
